# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-30 23:35
from __future__ import unicode_literals

import datetime

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('attachment', models.FileField(blank=True, null=True, upload_to=b'attachments')),
                ('size', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('color', models.CharField(choices=[(b'#ac725e', b'#ac725e'), (b'#d06b64', b'#d06b64'), (b'#f83a22', b'#f83a22'), (b'#fa573c', b'#fa573c'), (b'#ff7537', b'#ff7537'), (b'#ffad46', b'#ffad46'), (b'#42d692', b'#42d692'), (b'#16a765', b'#16a765'), (b'#7bd148', b'#7bd148'), (b'#b3dc6c', b'#b3dc6c'), (b'#fad165', b'#fad165'), (b'#92e1c0', b'#92e1c0'), (b'#9fe1e7', b'#9fe1e7'), (b'#9fc6e7', b'#9fc6e7'), (b'#4986e7', b'#4986e7'), (b'#9a9cff', b'#9a9cff'), (b'#b99aff', b'#b99aff'), (b'#c2c2c2', b'#c2c2c2'), (b'#cabdbf', b'#cabdbf'), (b'#cca6ac', b'#cca6ac'), (b'#f691b2', b'#f691b2'), (b'#cd74e6', b'#cd74e6'), (b'#a47ae2', b'#a47ae2'), (b'#555', b'#555')], default=b'#4986e7', max_length=7)),
                ('average_grade', models.DecimalField(decimal_places=4, default=-1, max_digits=7)),
                ('grade_by_weight', models.DecimalField(decimal_places=4, default=0, max_digits=7)),
                ('trend', models.FloatField(blank=True, default=None, null=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('room', models.CharField(blank=True, max_length=255)),
                ('credits', models.DecimalField(decimal_places=2, max_digits=4)),
                ('color', models.CharField(choices=[(b'#ac725e', b'#ac725e'), (b'#d06b64', b'#d06b64'), (b'#f83a22', b'#f83a22'), (b'#fa573c', b'#fa573c'), (b'#ff7537', b'#ff7537'), (b'#ffad46', b'#ffad46'), (b'#42d692', b'#42d692'), (b'#16a765', b'#16a765'), (b'#7bd148', b'#7bd148'), (b'#b3dc6c', b'#b3dc6c'), (b'#fad165', b'#fad165'), (b'#92e1c0', b'#92e1c0'), (b'#9fe1e7', b'#9fe1e7'), (b'#9fc6e7', b'#9fc6e7'), (b'#4986e7', b'#4986e7'), (b'#9a9cff', b'#9a9cff'), (b'#b99aff', b'#b99aff'), (b'#c2c2c2', b'#c2c2c2'), (b'#cabdbf', b'#cabdbf'), (b'#cca6ac', b'#cca6ac'), (b'#f691b2', b'#f691b2'), (b'#cd74e6', b'#cd74e6'), (b'#a47ae2', b'#a47ae2'), (b'#555', b'#555')], default=b'#4986e7', max_length=7)),
                ('website', models.URLField(blank=True, max_length=3000, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('current_grade', models.DecimalField(decimal_places=4, default=-1, max_digits=7)),
                ('trend', models.FloatField(blank=True, default=None, null=True)),
                ('private_slug', models.SlugField(blank=True, null=True, unique=True)),
                ('teacher_name', models.CharField(blank=True, max_length=255)),
                ('teacher_email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('days_of_week', models.CharField(default=b'0000000', max_length=7, validators=[django.core.validators.RegexValidator(b'^[0-1]+$', b'Seven booleans (0 or 1) indicating which days of the week the course is on (week starts on Sunday).', b'invalid'), django.core.validators.MinLengthValidator(7, b'Seven booleans (0 or 1) indicating which days of the week the course is on (week starts on Sunday).')])),
                ('sun_start_time', models.TimeField(default=datetime.time(12, 0))),
                ('sun_end_time', models.TimeField(default=datetime.time(12, 0))),
                ('mon_start_time', models.TimeField(default=datetime.time(12, 0))),
                ('mon_end_time', models.TimeField(default=datetime.time(12, 0))),
                ('tue_start_time', models.TimeField(default=datetime.time(12, 0))),
                ('tue_end_time', models.TimeField(default=datetime.time(12, 0))),
                ('wed_start_time', models.TimeField(default=datetime.time(12, 0))),
                ('wed_end_time', models.TimeField(default=datetime.time(12, 0))),
                ('thu_start_time', models.TimeField(default=datetime.time(12, 0))),
                ('thu_end_time', models.TimeField(default=datetime.time(12, 0))),
                ('fri_start_time', models.TimeField(default=datetime.time(12, 0))),
                ('fri_end_time', models.TimeField(default=datetime.time(12, 0))),
                ('sat_start_time', models.TimeField(default=datetime.time(12, 0))),
                ('sat_end_time', models.TimeField(default=datetime.time(12, 0))),
                ('days_of_week_alt', models.CharField(default=b'0000000', max_length=7, validators=[django.core.validators.RegexValidator(b'^[0-1]+$', b'Seven booleans (0 or 1) indicating which days of the week the course is on (week starts on Sunday).', b'invalid'), django.core.validators.MinLengthValidator(7, b'Seven booleans (0 or 1) indicating which days of the week the course is on (week starts on Sunday).')])),
                ('sun_start_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('sun_end_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('mon_start_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('mon_end_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('tue_start_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('tue_end_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('wed_start_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('wed_end_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('thu_start_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('thu_end_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('fri_start_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('fri_end_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('sat_start_time_alt', models.TimeField(default=datetime.time(12, 0))),
                ('sat_end_time_alt', models.TimeField(default=datetime.time(12, 0))),
            ],
            options={
                'ordering': ('start_date',),
            },
        ),
        migrations.CreateModel(
            name='CourseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('shown_on_calendar', models.BooleanField(default=True)),
                ('average_grade', models.DecimalField(decimal_places=4, default=-1, max_digits=7)),
                ('trend', models.FloatField(blank=True, default=None, null=True)),
                ('private_slug', models.SlugField(blank=True, null=True, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('start_date',),
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('status', models.PositiveIntegerField(choices=[(0, b'Owned'), (1, b'Rented'), (2, b'Ordered'), (3, b'Shipped'), (4, b'Need'), (5, b'Received'), (6, b'To Sell')], default=0)),
                ('condition', models.PositiveIntegerField(choices=[(0, b'Brand New'), (1, b'Refurbished'), (2, b'Used - Like New'), (3, b'Used - Very Good'), (4, b'Used - Good'), (5, b'Used - Acceptable'), (6, b'Used - Poor'), (7, b'Broken')], default=0)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('price', models.CharField(blank=True, max_length=255, null=True)),
                ('details', models.TextField(blank=True, default=b'')),
                ('seller_details', models.TextField(blank=True, default=b'')),
                ('courses', models.ManyToManyField(blank=True, default=None, related_name='materials', to='planner.Course')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='MaterialGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('shown_on_calendar', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.AddField(
            model_name='material',
            name='material_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='planner.MaterialGroup'),
        ),
        migrations.AddField(
            model_name='course',
            name='course_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='planner.CourseGroup'),
        ),
        migrations.AddField(
            model_name='category',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='planner.Course'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='planner.Course'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to=settings.AUTH_USER_MODEL),
        ),
    ]
