# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-04-03 21:52
from __future__ import unicode_literals

import datetime

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import helium.common.utils.validators
import helium.planner.utils.attachmentutils


class Migration(migrations.Migration):
    dependencies = [
        ('planner', '0005_add_course_schedule'),
    ]

    operations = [
        migrations.AlterField(
            model_name='attachment',
            name='attachment',
            field=models.FileField(blank=True, help_text='The file to be uploaded.', null=True,
                                   upload_to=helium.planner.utils.attachmentutils.get_path_for_attachment),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='course',
            field=models.ForeignKey(blank=True, help_text='The course with which to associate.', null=True,
                                    on_delete=django.db.models.deletion.CASCADE, related_name='attachments',
                                    to='planner.Course'),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='event',
            field=models.ForeignKey(blank=True, help_text='The event with which to associate.', null=True,
                                    on_delete=django.db.models.deletion.CASCADE, related_name='attachments',
                                    to='planner.Event'),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='homework',
            field=models.ForeignKey(blank=True, help_text='The homework with which to associate.', null=True,
                                    on_delete=django.db.models.deletion.CASCADE, related_name='attachments',
                                    to='planner.Homework'),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='category',
            name='color',
            field=models.CharField(
                choices=[('#ac725e', '#ac725e'), ('#d06b64', '#d06b64'), ('#f83a22', '#f83a22'), ('#fa573c', '#fa573c'),
                         ('#ff7537', '#ff7537'), ('#ffad46', '#ffad46'), ('#42d692', '#42d692'), ('#16a765', '#16a765'),
                         ('#7bd148', '#7bd148'), ('#b3dc6c', '#b3dc6c'), ('#fad165', '#fad165'), ('#92e1c0', '#92e1c0'),
                         ('#9fe1e7', '#9fe1e7'), ('#9fc6e7', '#9fc6e7'), ('#4986e7', '#4986e7'), ('#9a9cff', '#9a9cff'),
                         ('#b99aff', '#b99aff'), ('#c2c2c2', '#c2c2c2'), ('#cabdbf', '#cabdbf'), ('#cca6ac', '#cca6ac'),
                         ('#f691b2', '#f691b2'), ('#cd74e6', '#cd74e6'), ('#a47ae2', '#a47ae2'), ('#555', '#555')],
                default='#4986e7',
                help_text='A valid hex color code choice to determine the color items will be shown on the calendar',
                max_length=7),
        ),
        migrations.AlterField(
            model_name='category',
            name='course',
            field=models.ForeignKey(help_text='The course with which to associate.',
                                    on_delete=django.db.models.deletion.CASCADE, related_name='categories',
                                    to='planner.Course'),
        ),
        migrations.AlterField(
            model_name='category',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='category',
            name='weight',
            field=models.DecimalField(decimal_places=2,
                                      help_text="A decimal weight for this category's homework (note that all weights associated with a single course cannot exceed a value of 100).",
                                      max_digits=5),
        ),
        migrations.AlterField(
            model_name='course',
            name='color',
            field=models.CharField(
                choices=[('#ac725e', '#ac725e'), ('#d06b64', '#d06b64'), ('#f83a22', '#f83a22'), ('#fa573c', '#fa573c'),
                         ('#ff7537', '#ff7537'), ('#ffad46', '#ffad46'), ('#42d692', '#42d692'), ('#16a765', '#16a765'),
                         ('#7bd148', '#7bd148'), ('#b3dc6c', '#b3dc6c'), ('#fad165', '#fad165'), ('#92e1c0', '#92e1c0'),
                         ('#9fe1e7', '#9fe1e7'), ('#9fc6e7', '#9fc6e7'), ('#4986e7', '#4986e7'), ('#9a9cff', '#9a9cff'),
                         ('#b99aff', '#b99aff'), ('#c2c2c2', '#c2c2c2'), ('#cabdbf', '#cabdbf'), ('#cca6ac', '#cca6ac'),
                         ('#f691b2', '#f691b2'), ('#cd74e6', '#cd74e6'), ('#a47ae2', '#a47ae2'), ('#555', '#555')],
                default='#4986e7',
                help_text='A valid hex color code choice to determine the color events will be shown on the calendar',
                max_length=7),
        ),
        migrations.AlterField(
            model_name='course',
            name='course_group',
            field=models.ForeignKey(help_text='The course group with which to associate.',
                                    on_delete=django.db.models.deletion.CASCADE, related_name='courses',
                                    to='planner.CourseGroup'),
        ),
        migrations.AlterField(
            model_name='course',
            name='credits',
            field=models.DecimalField(decimal_places=2, help_text='A decimal corresponding to credit hours.',
                                      max_digits=4),
        ),
        migrations.AlterField(
            model_name='course',
            name='end_date',
            field=models.DateField(db_index=True, help_text='An ISO-8601 date.'),
        ),
        migrations.AlterField(
            model_name='course',
            name='is_online',
            field=models.BooleanField(default=False,
                                      help_text='Whether or not the course is online (and thus may have times associated with it)'),
        ),
        migrations.AlterField(
            model_name='course',
            name='room',
            field=models.CharField(blank=True, help_text='An arbitrary string.', max_length=255),
        ),
        migrations.AlterField(
            model_name='course',
            name='start_date',
            field=models.DateField(db_index=True, help_text='An ISO-8601 date.'),
        ),
        migrations.AlterField(
            model_name='course',
            name='teacher_email',
            field=models.EmailField(blank=True, default=None, help_text='A valid email address.', max_length=254,
                                    null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='teacher_name',
            field=models.CharField(blank=True, help_text='A display name for the teacher.', max_length=255),
        ),
        migrations.AlterField(
            model_name='course',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='course',
            name='website',
            field=models.URLField(blank=True, help_text='A valid URL.', max_length=3000, null=True),
        ),
        migrations.AlterField(
            model_name='coursegroup',
            name='end_date',
            field=models.DateField(db_index=True, help_text='An ISO-8601 date.'),
        ),
        migrations.AlterField(
            model_name='coursegroup',
            name='shown_on_calendar',
            field=models.BooleanField(db_index=True, default=True,
                                      help_text='Whether or not items should be shown on the calendar.'),
        ),
        migrations.AlterField(
            model_name='coursegroup',
            name='start_date',
            field=models.DateField(db_index=True, help_text='An ISO-8601 date.'),
        ),
        migrations.AlterField(
            model_name='coursegroup',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='course',
            field=models.ForeignKey(help_text='The course with which to associate.',
                                    on_delete=django.db.models.deletion.CASCADE, related_name='schedules',
                                    to='planner.Course'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='days_of_week',
            field=models.CharField(default='0000000',
                                   help_text='Seven booleans (0 or 1) indicating which days of the week the course is on (week starts on Sunday).',
                                   max_length=7, validators=[django.core.validators.RegexValidator('^[0-1]+$',
                                                                                                   'Seven booleans (0 or 1) indicating which days of the week the course is on (week starts on Sunday).',
                                                                                                   'invalid'),
                                                             django.core.validators.MinLengthValidator(7,
                                                                                                       'Seven booleans (0 or 1) indicating which days of the week the course is on (week starts on Sunday).')]),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='fri_end_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='fri_start_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='mon_end_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='mon_start_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='sat_end_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='sat_start_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='sun_end_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='sun_start_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='thu_end_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='thu_start_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='tue_end_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='tue_start_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='wed_end_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='courseschedule',
            name='wed_start_time',
            field=models.TimeField(default=datetime.time(12, 0), help_text='An ISO-8601 time.'),
        ),
        migrations.AlterField(
            model_name='event',
            name='all_day',
            field=models.BooleanField(default=False, help_text='Whether or not it is an all day event.'),
        ),
        migrations.AlterField(
            model_name='event',
            name='comments',
            field=models.TextField(blank=True, help_text='An arbitrary string (which may contain HTML formatting).'),
        ),
        migrations.AlterField(
            model_name='event',
            name='end',
            field=models.DateTimeField(db_index=True, help_text='An ISO-8601 date.'),
        ),
        migrations.AlterField(
            model_name='event',
            name='owner_id',
            field=models.CharField(blank=True, help_text='An arbitrary string identifying the owning resource.',
                                   max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='priority',
            field=models.PositiveIntegerField(default=50, help_text='A priority integer between 0 and 100.'),
        ),
        migrations.AlterField(
            model_name='event',
            name='show_end_time',
            field=models.BooleanField(default=False,
                                      help_text='Whether or not the end time should be shown on the calendar.'),
        ),
        migrations.AlterField(
            model_name='event',
            name='start',
            field=models.DateTimeField(db_index=True, help_text='An ISO-8601 date.'),
        ),
        migrations.AlterField(
            model_name='event',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='event',
            name='url',
            field=models.URLField(blank=True, help_text='An optional URL that the calendar item references.',
                                  max_length=3000, null=True),
        ),
        migrations.AlterField(
            model_name='homework',
            name='all_day',
            field=models.BooleanField(default=False, help_text='Whether or not it is an all day event.'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='category',
            field=models.ForeignKey(blank=True, default=None, help_text='The category with which to associate.',
                                    null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='homework',
                                    to='planner.Category'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='comments',
            field=models.TextField(blank=True, help_text='An arbitrary string (which may contain HTML formatting).'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='completed',
            field=models.BooleanField(default=False, help_text='Whether or not the homework has been completed.'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='course',
            field=models.ForeignKey(help_text='The course with which to associate.',
                                    on_delete=django.db.models.deletion.CASCADE, related_name='homework',
                                    to='planner.Course'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='current_grade',
            field=models.CharField(help_text='The current grade in fraction form (ex. 25/30).', max_length=255,
                                   validators=[helium.common.utils.validators.validate_fraction]),
        ),
        migrations.AlterField(
            model_name='homework',
            name='end',
            field=models.DateTimeField(db_index=True, help_text='An ISO-8601 date.'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='materials',
            field=models.ManyToManyField(blank=True, default=None,
                                         help_text='A list of materials with which to associate.',
                                         related_name='homework', to='planner.Material'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='priority',
            field=models.PositiveIntegerField(default=50, help_text='A priority integer between 0 and 100.'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='show_end_time',
            field=models.BooleanField(default=False,
                                      help_text='Whether or not the end time should be shown on the calendar.'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='start',
            field=models.DateTimeField(db_index=True, help_text='An ISO-8601 date.'),
        ),
        migrations.AlterField(
            model_name='homework',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='homework',
            name='url',
            field=models.URLField(blank=True, help_text='An optional URL that the calendar item references.',
                                  max_length=3000, null=True),
        ),
        migrations.AlterField(
            model_name='material',
            name='condition',
            field=models.PositiveIntegerField(
                choices=[(0, 'Brand New'), (1, 'Refurbished'), (2, 'Used - Like New'), (3, 'Used - Very Good'),
                         (4, 'Used - Good'), (5, 'Used - Acceptable'), (6, 'Used - Poor'), (7, 'Broken')], default=0,
                help_text='A valid material condition choice.'),
        ),
        migrations.AlterField(
            model_name='material',
            name='courses',
            field=models.ManyToManyField(blank=True, default=None,
                                         help_text='A list of courses with which to associate.',
                                         related_name='materials', to='planner.Course'),
        ),
        migrations.AlterField(
            model_name='material',
            name='details',
            field=models.TextField(blank=True, help_text='An arbitrary string (which may contain HTML formatting).'),
        ),
        migrations.AlterField(
            model_name='material',
            name='material_group',
            field=models.ForeignKey(help_text='The material group with which to associate.',
                                    on_delete=django.db.models.deletion.CASCADE, related_name='materials',
                                    to='planner.MaterialGroup'),
        ),
        migrations.AlterField(
            model_name='material',
            name='price',
            field=models.CharField(blank=True, help_text='A price string.', max_length=255),
        ),
        migrations.AlterField(
            model_name='material',
            name='status',
            field=models.PositiveIntegerField(
                choices=[(0, 'Owned'), (1, 'Rented'), (2, 'Ordered'), (3, 'Shipped'), (4, 'Need'), (5, 'Received'),
                         (6, 'To Sell')], default=0, help_text='A valid material status choice.'),
        ),
        migrations.AlterField(
            model_name='material',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='material',
            name='website',
            field=models.URLField(blank=True, help_text='A valid URL.', max_length=3000, null=True),
        ),
        migrations.AlterField(
            model_name='materialgroup',
            name='shown_on_calendar',
            field=models.BooleanField(default=True, help_text='Whether or not items should be shown on the calendar.'),
        ),
        migrations.AlterField(
            model_name='materialgroup',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='event',
            field=models.ForeignKey(blank=True, help_text='The event with which to associate.', null=True,
                                    on_delete=django.db.models.deletion.CASCADE, related_name='reminders',
                                    to='planner.Event'),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='homework',
            field=models.ForeignKey(blank=True, help_text='The homework with which to associate.', null=True,
                                    on_delete=django.db.models.deletion.CASCADE, related_name='reminders',
                                    to='planner.Homework'),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='message',
            field=models.TextField(
                help_text='A string that will be used as the reminder message (may contain HTML formatting).'),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='offset',
            field=models.PositiveIntegerField(default=30,
                                              help_text='The number of units (in `offset_type`) from the offset.'),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='offset_type',
            field=models.PositiveIntegerField(choices=[(0, 'minutes'), (1, 'hours'), (2, 'days'), (3, 'weeks')],
                                              default=0, help_text='A valid reminder offset type choice.'),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='title',
            field=models.CharField(db_index=True, help_text='A display name.', max_length=255),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='type',
            field=models.PositiveIntegerField(choices=[(0, 'Popup'), (1, 'Email'), (2, 'Text')], db_index=True,
                                              default=0, help_text='A valid reminder type choice.'),
        ),
    ]
